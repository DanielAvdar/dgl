name: Tests

on: [ push,pull_request ]
env:
  DGL_HOME: ${{ github.workspace }}
  DGL_LIBRARY_PATH: ${{ github.workspace }}/build
jobs:
  tests:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create Virtual Environment
        run: |
          python -m venv ./python/venv
          


      - name: Install OS Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          source ./python/venv/bin/activate
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev make cmake
          bash script/build_dgl.sh -c

      - name: Install OS Dependencies
        if: matrix.os == 'macos-latest'
        run: |
          source ./python/venv/bin/activate
          brew install cmake
          mkdir build
          cd build
          cmake -DUSE_OPENMP=off -DCMAKE_C_FLAGS='-DXBYAK_DONT_USE_MAP_JIT' -DCMAKE_CXX_FLAGS='-DXBYAK_DONT_USE_MAP_JIT' -DUSE_AVX=OFF -DUSE_LIBXSMM=OFF ..
          make -j4
          cd ../python
          python setup.py install

      - name: Install OS Dependencies
        if: matrix.os == 'windows-latest'
        run: |
          python/venv/bin/activate
          choco install msbuild cmake
          MD build
          CD build
          cmake -DCMAKE_CXX_FLAGS="/DDGL_EXPORTS" -DCMAKE_CONFIGURATION_TYPES="Release" -DDMLC_FORCE_SHARED_CRT=ON .. -G "Visual Studio 16 2019"
          msbuild dgl.sln /m
          CD ..\python
          python setup.py install

      - name: Test with pytest
        run: |
          pytest
    continue-on-error: true
